#Convert factor to non factor this is very much important
Financial.Data$Profit  <- as.numeric(as.character(Financial.Data$Profit))
str(Financial.Data)
#gsub and sub pattern matching ,regex gsub would replace all instace
Financial.Data$Expenses <- as.numeric(  gsub(" Dollars", "",Financial.Data$Expenses))
Financial.Data$Expenses <-  as.numeric(gsub(",","",Financial.Data$Expenses))
Financial.Data$Revenue <- as.numeric(gsub("\\$","",Financial.Data$Revenue))
Financial.Data$Revenue <- as.numeric(gsub(",","",Financial.Data$Revenue))
Financial.Data$Growth <- as.numeric(gsub("%","",Financial.Data$Growth))
#Convert Revenue Expenses and Growth to numeric( factor to non-factor)
Financial.Data$Expenses <- as.numeric(Financial.Data$Expenses)
Financial.Data$Revenue <- as.numeric(Financial.Data$Revenue)
Financial.Data$Growth <- as.numeric(Financial.Data$Growth)
#What is NA --logical constraint
?NA
#FALSE ==NA
#Locate Missing Data
head(Financial.Data,24)
complete.cases(Financial.Data)
#get the subset of the entire data set that has NA in any of teh columns
Financial.Data[!complete.cases(Financial.Data),]
#Filter the data frame ,which to filter the NA dvalues ,only true values will be taken ,NA values will be ignored
Financial.Data[which(Financial.Data$Revenue == 9746272),]
head(Financial.Data[which(Financial.Data$Employees >20),])
#take only NA values,filter with Na values
Financial.Data[is.na(Financial.Data$Expenses),]
Financial.Data[is.na(Financial.Data$State),]
#Removing missing data for important features
Financial.Data.Backup <- Financial.Data
#Remove rows where NA for Industry column
Financial.Data <- Financial.Data[!is.na(Financial.Data$Industry),]
Financial.Data[is.na(Financial.Data$Industry),]
#Reset the data frame index here 14 15 row no is missing
rownames(Financial.Data) <- seq(1:nrow(Financial.Data))
rownames(Financial.Data) <- NULL
#Replacing missing data with factual analysis,like expenses(Revune-Profit), state column
Financial.Data[is.na(Financial.Data$State),]
Financial.Data[is.na(Financial.Data$State) & Financial.Data$City == "New York","State"] <- "NY"
Financial.Data[is.na(Financial.Data$State) & Financial.Data$City == "San Francisco","State"]  <- "CA"
median_emp_retail <- median(Financial.Data[Financial.Data$Industry == "Retail","Employees"],na.rm=TRUE)
Financial.Data[is.na(Financial.Data$Employees) & Financial.Data$Industry=="Retail","Employees"] <- median_emp_retail
median_emp_finseve <-median(Financial.Data[Financial.Data$Industry == "Financial Services","Employees"],na.rm=TRUE)
Financial.Data[is.na(Financial.Data$Employees) & Financial.Data$Industry=="Financial Services","Employees"] <- median_emp_retail
Financial.Data[!complete.cases(Financial.Data),]
View(Financial.Data)
#set the  working directory
setwd("E:\\R Advanced\\Financial Review")
#import the dataset to R
Financial.Data <- read.csv("Future-500-Data.csv",na.strings = c(""))
str(Financial.Data)
#Changing non factor to factor
Financial.Data$ID <- factor(Financial.Data$ID)
Financial.Data$Inception <- factor(Financial.Data$Inception)``
#Changing Factor to non-Factor
#gsub and sub pattern matching ,regex gsub would replace all instace
Financial.Data$Expenses <- gsub(" Dollars","",Financial.Data$Expenses)
Financial.Data$Expenses <- gsub(",","",Financial.Data$Expenses)
Financial.Data$Revenue <- gsub("\\$","",Financial.Data$Revenue)
Financial.Data$Revenue <- gsub(",","",Financial.Data$Revenue)
Financial.Data$Growth <- gsub("%","",Financial.Data$Growth)
#Convert Revenue Expenses and Growth to numeric
Financial.Data$Expenses <- as.numeric(Financial.Data$Expenses)
Financial.Data$Revenue <- as.numeric(Financial.Data$Revenue)
Financial.Data$Growth <- as.numeric(Financial.Data$Growth)
#Check for NA's and filter the data set accroding to it
complete.cases(Financial.Data)
Financial.Data[!complete.cases(Financial.Data),]
head(Financial.Data,24)
#Which for Na data
Financial.Data[which(Financial.Data$Expenses == 1130700),]
#is.na for missing data
Financial.Data[is.na(Financial.Data$Expenses),]
#Removing record with missing data in one factor column
Financial.Data.backup <-Financial.Data
Financial.Data <- Financial.Data[!is.na(Financial.Data$Industry),]
#Resetting row no's
rownames(Financial.Data) <-c(1:nrow(Financial.Data))
rownames(Financial.Data) <- NULL
#Replacing missing data with factual analysis,like expenses(Revune-Profit), state column
Financial.Data[is.na(Financial.Data$State) & Financial.Data$City == "New York","State"] <- "NY"
Financial.Data[is.na(Financial.Data$State) & Financial.Data$City == "San Francisco","State"] <- "CA"
View(Financial.Data)
median(Financial.Data$Employees,na.rm = True)
median(Financial.Data$Employees,na.rm = TRUE)
median(Financial.Data[Financial.Data$Industry == "Retail","Employees"],na.rm = TRUE)
mid_emp_retail <- median(Financial.Data[Financial.Data$Industry == "Retail","Employees"],na.rm = TRUE)
Financial.Data[is.na(Financial.Data$Employee) & Financial.Data$Industry == "Retail","Employees"] <- mid_emp_retail
View(Financial.Data)
source('E:/R Advanced/Financial Review/FinancialReview_Analysis.R', echo=TRUE)
Financial.Data[is.na(Financial.Data$Employee),]
mid_emp_finserv <-median(Financial.Data[Financial.Data$Industry == "Financial Services","Employees"],na.rm=TRUE)
Financial.Data[is.na(Financial.Data$Employees) & Financial.Data$Industry == "Financial Services","Employees"] <-mid_emp_finserv
Financial.Data[is.na(Financial.Data$Employees),]
Financial.Data[is.na(Financial.Data$Revenue),]
mid_revenue_construction <- median(Financial.Data[Financial.Data$Industry == "Construction","Revenue"])
Financial.Data[is.na(Financial.Data$Revenue) & Financial.Data$Industry == "Construction","Revenue"] <- mid_revenue_construction
Financial.Data[is.na(Financial.Data$Revenue),]
mid_revenue_construction <- median(Financial.Data[Financial.Data$Industry == "Construction","Revenue"])
mid_revenue_construction <- median(Financial.Data[Financial.Data$Industry == "Construction","Revenue"],na.rm=TRUE)
Financial.Data[is.na(Financial.Data$Revenue) & Financial.Data$Industry == "Construction","Revenue"] <- mid_revenue_construction
Financial.Data[is.na(Financial.Data$Revenue),]
Financial.Data[is.na(Financial.Data$Expenses),]
mid_expense_construction <- median(Financial.Data[Financial.Data$Industry == "Construction","Expenses"],na.rm = TRUE)
Financial.Data[is.na(Financial.Data$Expenses)  & Financial.Data$Industry == "Construction","Expenses"] <- mid_expense_construction
mid_expense_it_serv<- median(Financial.Data[Financial.Data$Industry == "IT Services","Expenses"],na.rm = TRUE)
Financial.Data[is.na(Financial.Data$Expenses)  & Financial.Data$Industry == "IT Services","Expenses"] <- mid_expense_it_serv
View(Financial.Data)
Financial.Data[is.na(Financial.Data$Expenses),]
Financial.Data[is.na(Financial.Data$Revenue),]
Financial.Data[is.na(Financial.Data$Employees),]
Financial.Data[is.na(Financial.Data$Profit),]
#Repalce profit
profit <- Financial.Data[is.na(Financial.Data$Profit),"Revenue"] - Financial.Data[is.na(Financial.Data$Profit),"Expenses"]
Financial.Data[is.na(Financial.Data$Growth),]
#set the  working directory
setwd("E:\\R Advanced\\Financial Review")
#import the dataset to R
Financial.Data <- read.csv("Future-500-Data.csv",na.strings = c(""))
str(Financial.Data)
#Changing non factor to factor
Financial.Data$ID <- factor(Financial.Data$ID)
Financial.Data$Inception <- factor(Financial.Data$Inception)``
#Changing Factor to non-Factor
#gsub and sub pattern matching ,regex gsub would replace all instace
Financial.Data$Expenses <- gsub(" Dollars","",Financial.Data$Expenses)
Financial.Data$Expenses <- gsub(",","",Financial.Data$Expenses)
Financial.Data$Revenue <- gsub("\\$","",Financial.Data$Revenue)
Financial.Data$Revenue <- gsub(",","",Financial.Data$Revenue)
Financial.Data$Growth <- gsub("%","",Financial.Data$Growth)
#Convert Revenue Expenses and Growth to numeric
Financial.Data$Expenses <- as.numeric(Financial.Data$Expenses)
Financial.Data$Revenue <- as.numeric(Financial.Data$Revenue)
Financial.Data$Growth <- as.numeric(Financial.Data$Growth)
#Check for NA's and filter the data set accroding to it
complete.cases(Financial.Data)
Financial.Data[!complete.cases(Financial.Data),]
head(Financial.Data,24)
#Which for Na data
Financial.Data[which(Financial.Data$Expenses == 1130700),]
#is.na for missing data
Financial.Data[is.na(Financial.Data$Expenses),]
#Removing record with missing data in one factor column
Financial.Data.backup <-Financial.Data
Financial.Data <- Financial.Data[!is.na(Financial.Data$Industry),]
#Resetting row no's
rownames(Financial.Data) <-c(1:nrow(Financial.Data))
rownames(Financial.Data) <- NULL
#Replacing missing data with factual analysis,like expenses(Revune-Profit), state column
Financial.Data[is.na(Financial.Data$State) & Financial.Data$City == "New York","State"] <- "NY"
Financial.Data[is.na(Financial.Data$State) & Financial.Data$City == "San Francisco","State"] <- "CA"
#set the  working directory
setwd("E:\\R Advanced\\Financial Review")
#import the dataset to R
Financial.Data <- read.csv("Future-500-Data.csv",na.strings = c(""))
str(Financial.Data)
#Changing non factor to factor
Financial.Data$ID <- factor(Financial.Data$ID)
Financial.Data$Inception <- factor(Financial.Data$Inception)``
#Changing Factor to non-Factor
#gsub and sub pattern matching ,regex gsub would replace all instace
Financial.Data$Expenses <- gsub(" Dollars","",Financial.Data$Expenses)
Financial.Data$Expenses <- gsub(",","",Financial.Data$Expenses)
Financial.Data$Revenue <- gsub("\\$","",Financial.Data$Revenue)
Financial.Data$Revenue <- gsub(",","",Financial.Data$Revenue)
Financial.Data$Growth <- gsub("%","",Financial.Data$Growth)
#Convert Revenue Expenses and Growth to numeric
Financial.Data$Expenses <- as.numeric(Financial.Data$Expenses)
Financial.Data$Revenue <- as.numeric(Financial.Data$Revenue)
Financial.Data$Growth <- as.numeric(Financial.Data$Growth)
#Check for NA's and filter the data set accroding to it
complete.cases(Financial.Data)
Financial.Data[!complete.cases(Financial.Data),]
head(Financial.Data,24)
#Which for Na data
Financial.Data[which(Financial.Data$Expenses == 1130700),]
#is.na for missing data
Financial.Data[is.na(Financial.Data$Expenses),]
#Removing record with missing data in one factor column
Financial.Data.backup <-Financial.Data
Financial.Data <- Financial.Data[!is.na(Financial.Data$Industry),]
#Resetting row no's
rownames(Financial.Data) <-c(1:nrow(Financial.Data))
rownames(Financial.Data) <- NULL
#Replacing missing data with factual analysis,like expenses(Revune-Profit), state column
Financial.Data[is.na(Financial.Data$State) & Financial.Data$City == "New York","State"] <- "NY"
Financial.Data[is.na(Financial.Data$State) & Financial.Data$City == "San Francisco","State"] <- "CA"
#Replace epmployee value for retail sector as median of retail sector
mid_emp_retail <- median(Financial.Data[Financial.Data$Industry == "Retail","Employees"],na.rm = TRUE)
Financial.Data[is.na(Financial.Data$Employee) & Financial.Data$Industry == "Retail","Employees"] <- mid_emp_retail
mid_emp_finserv <-median(Financial.Data[Financial.Data$Industry == "Financial Services","Employees"],na.rm=TRUE)
Financial.Data[is.na(Financial.Data$Employees) & Financial.Data$Industry == "Financial Services","Employees"] <-mid_emp_finserv
#Replace revenue values
mid_revenue_construction <- median(Financial.Data[Financial.Data$Industry == "Construction","Revenue"],na.rm=TRUE)
Financial.Data[is.na(Financial.Data$Revenue) & Financial.Data$Industry == "Construction","Revenue"] <- mid_revenue_construction
Financial.Data[is.na(Financial.Data$Expenses),]
Financial.Data[is.na(Financial.Data$Expenses),]
mid_expense_it_serv<- Financial.Data[Financial.Data$Industry == "IT Services","Revenue"]-Financial.Data[Financial.Data$Industry == "IT Services","Profit"]
Financial.Data[is.na(Financial.Data$Expenses)  & Financial.Data$Industry == "IT Services","Expenses"] <- mid_expense_it_serv
mid_expense_it_serv<- Financial.Data[Financial.Data$Industry == "IT Services" & is.na(Financial.Data$Expenses),"Revenue"]-Financial.Data[Financial.Data$Industry == "IT Services" & is.na(Financial.Data$Expenses),"Profit"]
Financial.Data[is.na(Financial.Data$Expenses)  & Financial.Data$Industry == "IT Services","Expenses"] <- mid_expense_it_serv
Financial.Data[is.na(Financial.Data$Expenses),]
mid_expense_construction <- median(Financial.Data[Financial.Data$Industry == "Construction","Expenses"],na.rm = TRUE)
Financial.Data[is.na(Financial.Data$Expenses)  & Financial.Data$Industry == "Construction","Expenses"] <- mid_expense_construction
Financial.Data[is.na(Financial.Data$Expenses),]
View(Financial.Data)
Financial.Data[is.na(Financial.Data$Profit),]
profit <- Financial.Data[is.na(Financial.Data$Profit),"Revenue"] - Financial.Data[is.na(Financial.Data$Profit),"Expenses"]
Financial.Data[is.na(Financial.Data$Profit),] <- profit
Financial.Data[is.na(Financial.Data$Profit),] <- Financial.Data[is.na(Financial.Data$Profit),"Revenue"] - Financial.Data[is.na(Financial.Data$Profit),"Expenses"]
Financial.Data[is.na(Financial.Data$Profit),]
Financial.Data[(8,42),]
Financial.Data[c(8,42),]
Financial.Data[is.na(Financial.Data$Growth),]
#set the  working directory
setwd("E:\\R Advanced\\Financial Review")
#import the dataset to R
Financial.Data <- read.csv("Future-500-Data.csv",na.strings = c(""))
str(Financial.Data)
#Changing non factor to factor
Financial.Data$ID <- factor(Financial.Data$ID)
Financial.Data$Inception <- factor(Financial.Data$Inception)``
#Changing Factor to non-Factor
#gsub and sub pattern matching ,regex gsub would replace all instace
Financial.Data$Expenses <- gsub(" Dollars","",Financial.Data$Expenses)
Financial.Data$Expenses <- gsub(",","",Financial.Data$Expenses)
Financial.Data$Revenue <- gsub("\\$","",Financial.Data$Revenue)
Financial.Data$Revenue <- gsub(",","",Financial.Data$Revenue)
Financial.Data$Growth <- gsub("%","",Financial.Data$Growth)
#Convert Revenue Expenses and Growth to numeric
Financial.Data$Expenses <- as.numeric(Financial.Data$Expenses)
Financial.Data$Revenue <- as.numeric(Financial.Data$Revenue)
Financial.Data$Growth <- as.numeric(Financial.Data$Growth)
#Check for NA's and filter the data set accroding to it
complete.cases(Financial.Data)
Financial.Data[!complete.cases(Financial.Data),]
head(Financial.Data,24)
#Which for Na data
Financial.Data[which(Financial.Data$Expenses == 1130700),]
#is.na for missing data
Financial.Data[is.na(Financial.Data$Expenses),]
#Removing record with missing data in one factor column
Financial.Data.backup <-Financial.Data
Financial.Data <- Financial.Data[!is.na(Financial.Data$Industry),]
#Resetting row no's
rownames(Financial.Data) <-c(1:nrow(Financial.Data))
rownames(Financial.Data) <- NULL
#Replacing missing data with factual analysis,like expenses(Revune-Profit), state column
Financial.Data[is.na(Financial.Data$State) & Financial.Data$City == "New York","State"] <- "NY"
Financial.Data[is.na(Financial.Data$State) & Financial.Data$City == "San Francisco","State"] <- "CA"
#Replace epmployee value for retail sector as median of retail sector
mid_emp_retail <- median(Financial.Data[Financial.Data$Industry == "Retail","Employees"],na.rm = TRUE)
Financial.Data[is.na(Financial.Data$Employee) & Financial.Data$Industry == "Retail","Employees"] <- mid_emp_retail
mid_emp_finserv <-median(Financial.Data[Financial.Data$Industry == "Financial Services","Employees"],na.rm=TRUE)
Financial.Data[is.na(Financial.Data$Employees) & Financial.Data$Industry == "Financial Services","Employees"] <-mid_emp_finserv
#Replace revenue values
mid_revenue_construction <- median(Financial.Data[Financial.Data$Industry == "Construction","Revenue"],na.rm=TRUE)
Financial.Data[is.na(Financial.Data$Revenue) & Financial.Data$Industry == "Construction","Revenue"] <- mid_revenue_construction
Financial.Data[is.na(Financial.Data$Expenses),]
#Replace expense values
mid_expense_construction <- median(Financial.Data[Financial.Data$Industry == "Construction","Expenses"],na.rm = TRUE)
Financial.Data[is.na(Financial.Data$Expenses)  & Financial.Data$Industry == "Construction","Expenses"] <- mid_expense_construction
mid_expense_it_serv<- Financial.Data[Financial.Data$Industry == "IT Services" & is.na(Financial.Data$Expenses),"Revenue"] - Financial.Data[Financial.Data$Industry == "IT Services" & is.na(Financial.Data$Expenses),"Profit"]
Financial.Data[is.na(Financial.Data$Expenses)  & Financial.Data$Industry == "IT Services","Expenses"] <- mid_expense_it_serv
#Repalce profit ,deriving value method
profit <- Financial.Data[is.na(Financial.Data$Profit),"Revenue"] - Financial.Data[is.na(Financial.Data$Profit),"Expenses"]
Financial.Data[is.na(Financial.Data$Profit),] <- Financial.Data[is.na(Financial.Data$Profit),"Revenue"] - Financial.Data[is.na(Financial.Data$Profit),"Expenses"]
#Replace growth
#Financial.Data[is.na(Financial.Data$Growth),]
Financial.Data[is.na(Financial.Data$Growth),]
#set the  working directory
setwd("E:\\R Advanced\\Financial Review")
#import the dataset to R
Financial.Data <- read.csv("Future-500-Data.csv",na.strings = c(""))
str(Financial.Data)
#Changing non factor to factor
Financial.Data$ID <- factor(Financial.Data$ID)
Financial.Data$Inception <- factor(Financial.Data$Inception)``
#Changing Factor to non-Factor
#gsub and sub pattern matching ,regex gsub would replace all instace
Financial.Data$Expenses <- gsub(" Dollars","",Financial.Data$Expenses)
Financial.Data$Expenses <- gsub(",","",Financial.Data$Expenses)
Financial.Data$Revenue <- gsub("\\$","",Financial.Data$Revenue)
Financial.Data$Revenue <- gsub(",","",Financial.Data$Revenue)
Financial.Data$Growth <- gsub("%","",Financial.Data$Growth)
#Convert Revenue Expenses and Growth to numeric
Financial.Data$Expenses <- as.numeric(Financial.Data$Expenses)
Financial.Data$Revenue <- as.numeric(Financial.Data$Revenue)
Financial.Data$Growth <- as.numeric(Financial.Data$Growth)
#Check for NA's and filter the data set accroding to it
complete.cases(Financial.Data)
Financial.Data[!complete.cases(Financial.Data),]
head(Financial.Data,24)
#Which for Na data
Financial.Data[which(Financial.Data$Expenses == 1130700),]
#is.na for missing data
Financial.Data[is.na(Financial.Data$Expenses),]
#Removing record with missing data in one factor column
Financial.Data.backup <-Financial.Data
Financial.Data <- Financial.Data[!is.na(Financial.Data$Industry),]
#Resetting row no's
rownames(Financial.Data) <-c(1:nrow(Financial.Data))
rownames(Financial.Data) <- NULL
#Replacing missing data with factual analysis,like expenses(Revune-Profit), state column
Financial.Data[is.na(Financial.Data$State) & Financial.Data$City == "New York","State"] <- "NY"
Financial.Data[is.na(Financial.Data$State) & Financial.Data$City == "San Francisco","State"] <- "CA"
#Replace epmployee value for retail sector as median of retail sector
mid_emp_retail <- median(Financial.Data[Financial.Data$Industry == "Retail","Employees"],na.rm = TRUE)
Financial.Data[is.na(Financial.Data$Employee) & Financial.Data$Industry == "Retail","Employees"] <- mid_emp_retail
mid_emp_finserv <-median(Financial.Data[Financial.Data$Industry == "Financial Services","Employees"],na.rm=TRUE)
Financial.Data[is.na(Financial.Data$Employees) & Financial.Data$Industry == "Financial Services","Employees"] <-mid_emp_finserv
#Replace revenue values
mid_revenue_construction <- median(Financial.Data[Financial.Data$Industry == "Construction","Revenue"],na.rm=TRUE)
Financial.Data[is.na(Financial.Data$Revenue) & Financial.Data$Industry == "Construction","Revenue"] <- mid_revenue_construction
Financial.Data[is.na(Financial.Data$Expenses),]
#Replace expense values
mid_expense_construction <- median(Financial.Data[Financial.Data$Industry == "Construction","Expenses"],na.rm = TRUE)
Financial.Data[is.na(Financial.Data$Expenses)  & Financial.Data$Industry == "Construction","Expenses"] <- mid_expense_construction
mid_expense_it_serv<- Financial.Data[Financial.Data$Industry == "IT Services" & is.na(Financial.Data$Expenses),"Revenue"] - Financial.Data[Financial.Data$Industry == "IT Services" & is.na(Financial.Data$Expenses),"Profit"]
Financial.Data[is.na(Financial.Data$Expenses)  & Financial.Data$Industry == "IT Services","Expenses"] <- mid_expense_it_serv
#Repalce profit ,deriving value method
profit <- Financial.Data[is.na(Financial.Data$Profit),"Revenue"] - Financial.Data[is.na(Financial.Data$Profit),"Expenses"]
Financial.Data[is.na(Financial.Data$Profit),] <- Financial.Data[is.na(Financial.Data$Profit),"Revenue"] - Financial.Data[is.na(Financial.Data$Profit),"Expenses"]
#Replace growth
#Financial.Data[is.na(Financial.Data$Growth),]
Financial.Data[is.na(Financial.Data$Growth),]
str(Financial.Data$Profit)
str(Financial.Data)
View(Financial.Data)
View(Financial.Data)
Financial.Data <- Financial.Data[!is.na(Financial.Data$Industry),]
View(Financial.Data)
#set the  working directory
setwd("E:\\R Advanced\\Financial Review")
#import the dataset to R
Financial.Data <- read.csv("Future-500-Data.csv",na.strings = c(""))
str(Financial.Data)
#Changing non factor to factor
Financial.Data$ID <- factor(Financial.Data$ID)
Financial.Data$Inception <- factor(Financial.Data$Inception)``
#Changing Factor to non-Factor
#gsub and sub pattern matching ,regex gsub would replace all instace
Financial.Data$Expenses <- gsub(" Dollars","",Financial.Data$Expenses)
Financial.Data$Expenses <- gsub(",","",Financial.Data$Expenses)
Financial.Data$Revenue <- gsub("\\$","",Financial.Data$Revenue)
Financial.Data$Revenue <- gsub(",","",Financial.Data$Revenue)
Financial.Data$Growth <- gsub("%","",Financial.Data$Growth)
#Convert Revenue Expenses and Growth to numeric
Financial.Data$Expenses <- as.numeric(Financial.Data$Expenses)
Financial.Data$Revenue <- as.numeric(Financial.Data$Revenue)
Financial.Data$Growth <- as.numeric(Financial.Data$Growth)
#Check for NA's and filter the data set accroding to it
complete.cases(Financial.Data)
Financial.Data[!complete.cases(Financial.Data),]
head(Financial.Data,24)
#Which for Na data
Financial.Data[which(Financial.Data$Expenses == 1130700),]
#is.na for missing data
Financial.Data[is.na(Financial.Data$Expenses),]
#Removing record with missing data in one factor column
Financial.Data.backup <-Financial.Data
Financial.Data <- Financial.Data[!is.na(Financial.Data$Industry),]
#Resetting row no's
rownames(Financial.Data) <-c(1:nrow(Financial.Data))
rownames(Financial.Data) <- NULL
#Replacing missing data with factual analysis,like expenses(Revune-Profit), state column
Financial.Data[is.na(Financial.Data$State) & Financial.Data$City == "New York","State"] <- "NY"
Financial.Data[is.na(Financial.Data$State) & Financial.Data$City == "San Francisco","State"] <- "CA"
#Replace epmployee value for retail sector as median of retail sector
mid_emp_retail <- median(Financial.Data[Financial.Data$Industry == "Retail","Employees"],na.rm = TRUE)
Financial.Data[is.na(Financial.Data$Employee) & Financial.Data$Industry == "Retail","Employees"] <- mid_emp_retail
mid_emp_finserv <-median(Financial.Data[Financial.Data$Industry == "Financial Services","Employees"],na.rm=TRUE)
Financial.Data[is.na(Financial.Data$Employees) & Financial.Data$Industry == "Financial Services","Employees"] <-mid_emp_finserv
#Replace revenue values
mid_revenue_construction <- median(Financial.Data[Financial.Data$Industry == "Construction","Revenue"],na.rm=TRUE)
Financial.Data[is.na(Financial.Data$Revenue) & Financial.Data$Industry == "Construction","Revenue"] <- mid_revenue_construction
Financial.Data[is.na(Financial.Data$Expenses),]
#Replace expense values
mid_expense_construction <- median(Financial.Data[Financial.Data$Industry == "Construction","Expenses"],na.rm = TRUE)
Financial.Data[is.na(Financial.Data$Expenses)  & Financial.Data$Industry == "Construction","Expenses"] <- mid_expense_construction
mid_expense_it_serv<- Financial.Data[Financial.Data$Industry == "IT Services" & is.na(Financial.Data$Expenses),"Revenue"] - Financial.Data[Financial.Data$Industry == "IT Services" & is.na(Financial.Data$Expenses),"Profit"]
Financial.Data[is.na(Financial.Data$Expenses)  & Financial.Data$Industry == "IT Services","Expenses"] <- mid_expense_it_serv
#Repalce profit ,deriving value method
profit <- Financial.Data[is.na(Financial.Data$Profit),"Revenue"] - Financial.Data[is.na(Financial.Data$Profit),"Expenses"]
Financial.Data[is.na(Financial.Data$Profit),] <- Financial.Data[is.na(Financial.Data$Profit),"Revenue"] - Financial.Data[is.na(Financial.Data$Profit),"Expenses"]
str(Financial.Data)
View(Financial.Data)
#set the  working directory
setwd("E:\\R Advanced\\Financial Review")
#import the dataset to R
Financial.Data <- read.csv("Future-500-Data.csv",na.strings = c(""))
str(Financial.Data)
#Changing non factor to factor
Financial.Data$ID <- factor(Financial.Data$ID)
Financial.Data$Inception <- factor(Financial.Data$Inception)``
#Changing Factor to non-Factor
#gsub and sub pattern matching ,regex gsub would replace all instace
Financial.Data$Expenses <- gsub(" Dollars","",Financial.Data$Expenses)
Financial.Data$Expenses <- gsub(",","",Financial.Data$Expenses)
Financial.Data$Revenue <- gsub("\\$","",Financial.Data$Revenue)
Financial.Data$Revenue <- gsub(",","",Financial.Data$Revenue)
Financial.Data$Growth <- gsub("%","",Financial.Data$Growth)
#Convert Revenue Expenses and Growth to numeric
Financial.Data$Expenses <- as.numeric(Financial.Data$Expenses)
Financial.Data$Revenue <- as.numeric(Financial.Data$Revenue)
Financial.Data$Growth <- as.numeric(Financial.Data$Growth)
#Check for NA's and filter the data set accroding to it
complete.cases(Financial.Data)
Financial.Data[!complete.cases(Financial.Data),]
head(Financial.Data,24)
#Which for Na data
Financial.Data[which(Financial.Data$Expenses == 1130700),]
#is.na for missing data
Financial.Data[is.na(Financial.Data$Expenses),]
#Removing record with missing data in one factor column
Financial.Data.backup <-Financial.Data
Financial.Data <- Financial.Data[!is.na(Financial.Data$Industry),]
View(Financial.Data)
Financial.Data[is.na(Financial.Data$Profit),]
Financial.Data[is.na(Financial.Data$Growth),]
mid_growth_construction <- median(Financial.Data[Financial.Data$Industry == "Construction","Growth"])
mid_growth_construction <- median(Financial.Data[Financial.Data$Industry == "Construction" ,"Growth"],na.rm = TRUE)
Financial.Data[is.na(Financial.Data$Growth),"Growth"] <- mid_growth_construction
Financial.Data[is.na(Financial.Data$Growth),]
Financial.Data[is.na(Financial.Data$Profit),]
#set the  working directory
setwd("E:\\R Advanced\\Financial Review")
#import the dataset to R
Financial.Data <- read.csv("Future-500-Data.csv",na.strings = c(""))
str(Financial.Data)
#Changing non factor to factor
Financial.Data$ID <- factor(Financial.Data$ID)
Financial.Data$Inception <- factor(Financial.Data$Inception)``
#Changing Factor to non-Factor
#gsub and sub pattern matching ,regex gsub would replace all instace
Financial.Data$Expenses <- gsub(" Dollars","",Financial.Data$Expenses)
Financial.Data$Expenses <- gsub(",","",Financial.Data$Expenses)
Financial.Data$Revenue <- gsub("\\$","",Financial.Data$Revenue)
Financial.Data$Revenue <- gsub(",","",Financial.Data$Revenue)
Financial.Data$Growth <- gsub("%","",Financial.Data$Growth)
#Convert Revenue Expenses and Growth to numeric
Financial.Data$Expenses <- as.numeric(Financial.Data$Expenses)
Financial.Data$Revenue <- as.numeric(Financial.Data$Revenue)
Financial.Data$Growth <- as.numeric(Financial.Data$Growth)
#Check for NA's and filter the data set accroding to it
complete.cases(Financial.Data)
Financial.Data[!complete.cases(Financial.Data),]
head(Financial.Data,24)
#Which for Na data
Financial.Data[which(Financial.Data$Expenses == 1130700),]
#is.na for missing data
Financial.Data[is.na(Financial.Data$Expenses),]
#Removing record with missing data in one factor column
Financial.Data.backup <-Financial.Data
Financial.Data <- Financial.Data[!is.na(Financial.Data$Industry),]
#Resetting row no's
rownames(Financial.Data) <-c(1:nrow(Financial.Data))
rownames(Financial.Data) <- NULL
#Replacing missing data with factual analysis,like expenses(Revune-Profit), state column
Financial.Data[is.na(Financial.Data$State) & Financial.Data$City == "New York","State"] <- "NY"
Financial.Data[is.na(Financial.Data$State) & Financial.Data$City == "San Francisco","State"] <- "CA"
#Replace epmployee value for retail sector as median of retail sector
mid_emp_retail <- median(Financial.Data[Financial.Data$Industry == "Retail","Employees"],na.rm = TRUE)
Financial.Data[is.na(Financial.Data$Employee) & Financial.Data$Industry == "Retail","Employees"] <- mid_emp_retail
mid_emp_finserv <-median(Financial.Data[Financial.Data$Industry == "Financial Services","Employees"],na.rm=TRUE)
Financial.Data[is.na(Financial.Data$Employees) & Financial.Data$Industry == "Financial Services","Employees"] <-mid_emp_finserv
#Replace revenue values
mid_revenue_construction <- median(Financial.Data[Financial.Data$Industry == "Construction","Revenue"],na.rm=TRUE)
Financial.Data[is.na(Financial.Data$Revenue) & Financial.Data$Industry == "Construction","Revenue"] <- mid_revenue_construction
Financial.Data[is.na(Financial.Data$Expenses),]
#Replace expense values
mid_expense_construction <- median(Financial.Data[Financial.Data$Industry == "Construction","Expenses"],na.rm = TRUE)
Financial.Data[is.na(Financial.Data$Expenses)  & Financial.Data$Industry == "Construction","Expenses"] <- mid_expense_construction
mid_expense_it_serv<- Financial.Data[Financial.Data$Industry == "IT Services" & is.na(Financial.Data$Expenses),"Revenue"] - Financial.Data[Financial.Data$Industry == "IT Services" & is.na(Financial.Data$Expenses),"Profit"]
Financial.Data[is.na(Financial.Data$Expenses)  & Financial.Data$Industry == "IT Services","Expenses"] <- mid_expense_it_serv
Financial.Data[is.na(Financial.Data$Profit),]
#Repalce profit ,deriving value method
profit <- Financial.Data[is.na(Financial.Data$Profit),"Revenue"] - Financial.Data[is.na(Financial.Data$Profit),"Expenses"]
#Financial.Data[is.na(Financial.Data$Profit),] <- Financial.Data[is.na(Financial.Data$Profit),"Revenue"] - Financial.Data[is.na(Financial.Data$Profit),"Expenses"]
#str(Financial.Data)
#Relace growth
mid_growth_construction <- median(Financial.Data[Financial.Data$Industry == "Construction" ,"Growth"],na.rm = TRUE)
Financial.Data[is.na(Financial.Data$Growth),"Growth"] <- mid_growth_construction
View(Financial.Data)
Financial.Data[is.na(Financial.Data$Profit),]
Financial.Data[is.na(Financial.Data$Profit),"Profit"] <- Financial.Data[is.na(Financial.Data$Profit),"Revenue"] - Financial.Data[is.na(Financial.Data$Profit),"Expenses"]
Financial.Data[is.na(Financial.Data$Profit),]
View(Financial.Data)
library(ggplot2)
plt <- ggplot(data=Financial.Data)
plt+geom_point(aes(x=Revenue,y=Expenses,color=Industry,size=Profit))+geom_smooth()+xlab("Revenue")+ylab("Expense")
plt+geom_point(aes(x=Revenue,y=Expenses,color=Industry,size=Profit))+xlab("Revenue")+ylab("Expense")
#Facet grid
?FacetGrid
plt+geom_point(aes(x=Revenue,y=Expenses,color=Industry,size=Profit))+FacetGrid(Revenue~Expenses)
plt+geom_point(aes(x=Revenue,y=Expenses,color=Industry,size=Profit))+facet_grid(Revenue~Expenses)
plt+geom_point(aes(x=Revenue,y=Expenses,color=Industry,size=Profit))+facet_grid(Revenue~Expenses)
plt+geom_point(aes(x=Revenue,y=Expenses))+facet_grid(Revenue~Expenses,color=Industry,size=Profit)
plt+geom_point(aes(x=Revenue,y=Expenses))+geom_smooth(aes(x=Revenue,y=Expenses))
plt+geom_point(aes(x=Revenue,y=Expenses,color=Industry,size=Profit))+geom_smooth(aes(x=Revenue,y=Expenses,color=Industry))
plt+geom_boxplot(aes(x=Industry,y=Growth))
plt+geom_boxplot(aes(x=Industry,y=Growth))
plt+geom_boxplot(aes(x=Industry,y=Growth,color=Industry))
plt+geom_boxplot(aes(x=Industry,y=Growth,color=Industry))
plt+geom_boxplot(aes(x=Industry,y=Growth))
plt+geom_point(aes(x=Revenue,y=Expenses,color=Industry,size=Profit))+xlab("Revenue")+ylab("Expense")
plt+geom_boxplot(aes(x=Industry,y=Growth))
plt+geom_boxplot(aes(x=Industry,y=Growth,color=Industry))
plt+geom_point(aes(x=Revenue,y=Expenses,color=Industry,size=Profit))+geom_smooth(aes(x=Revenue,y=Expenses,color=Industry))
plt+geom_point(aes(x=Revenue,y=Expenses,color=Industry,size=Profit))+facet_grid(Revenue~Expenses)
plt+geom_point(aes(x=Revenue,y=Expenses,color=Industry,size=Profit))+facet_grid(Revenue~Expenses,scales="free")
plt+geom_point(aes(x=Revenue,y=Expenses,color=Industry,size=Profit))+facet_grid(Industry~.,scales="free")
plt+geom_point(aes(x=Revenue,y=Expenses,color=Industry,size=Profit))+facet_grid(.~Industry,scales="free")
